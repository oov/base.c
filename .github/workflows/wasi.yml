name: wasi

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          submodules: recursive
      - name: setup
        run: |
          sudo apt install -y git wget tar cmake ninja-build clang-format xz-utils
      - name: Build
        run: |
          mkdir -p build/tools build/ovbase
          cd build/tools
          WASMTIME_VERSION=v25.0.1
          wget https://github.com/bytecodealliance/wasmtime/releases/download/${WASMTIME_VERSION}/wasmtime-${WASMTIME_VERSION}-x86_64-linux.tar.xz
          tar Jxf wasmtime-${WASMTIME_VERSION}-x86_64-linux.tar.xz
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-24/wasi-sdk-24.0-x86_64-linux.tar.gz
          tar zxf wasi-sdk-24.0-x86_64-linux.tar.gz
          export PATH="$(pwd)/wasmtime-${WASMTIME_VERSION}-x86_64-linux:$PATH"
          export WASISDK="$(pwd)/wasi-sdk-24.0-x86_64-linux"
          cd ../..

          rm -f build/ovbase/CmakeCache.txt && CC="${WASISDK}/bin/clang-18 --target=wasm32-wasi-threads --sysroot=${WASISDK}/share/wasi-sysroot -pthread" cmake -S . -B build/ovbase --preset debug -DCMAKE_C_COMPILER="" -DTARGET_WASI_SDK=ON -DFORMAT_SOURCES=OFF -DCMAKE_INSTALL_PREFIX=build/local -DSKIP_OVTHREADS_TEST=OFF && \
          cmake --build build/ovbase && ctest --test-dir build/ovbase --output-on-failure --output-junit testlog.xml
